---
#Create LM client secret in EEA namespace
- name: 'Request SIP-TLS to create LM-server client certificates for spotfire-server'
  kubernetes.core.k8s:
    state: '{{ item }}'
    src: 'spotfire-server-client-cert.yaml'
    namespace: '{{ eea_namespace }}'
    wait: yes
  loop:
    - 'absent'
    - 'present'

- name: 'Retrieve eric-sec-sip-tls-trusted-root-cert secret'
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name:  eric-sec-sip-tls-trusted-root-cert
    namespace: '{{ eea_namespace }}'
  register: sip_tls_root_secret

- name: 'Retrieve spotfire-server-client-cert secret'
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: spotfire-server-client-cert
    namespace: '{{ eea_namespace }}'
  register: lm_client_secret

#Create secret in Spotfire namespace
- name: "Remove old spotfire-server-tls secret from Spotfire namespace"
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    namespace: '{{ spotfire.namespace }}'
    name: spotfire-server-tls

- name: 'Create spotfire-server-tls secret'
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: spotfire-server-tls
        namespace: '{{ spotfire.namespace }}'
      data:
        'cacertbundle.pem': "{{ sip_tls_root_secret.resources[0]['data']['cacertbundle.pem'] }}"
        'tls.crt': "{{ lm_client_secret.resources[0]['data']['tls.crt'] }}"
        'tls.key': "{{ lm_client_secret.resources[0]['data']['tls.key'] }}"
      type: Opaque
